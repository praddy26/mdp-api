name: MDP Lambda Build Worklfow

on:
  push:
    branches:
      - main
      - praddy
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: Enter deployment environment
        required: true
        default: ''
      VERSION_TEXT:
        description: Enter version to deploy, only if you dont find in above dropdown else leave empty :p
        required: true
        default: ''
      REGION:
        description: Pick Region for Deployment
        required: true
        type: choice
        options:
          - All
          - us-east-1
          - us-west-2

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
  checks: read
  statuses: write

env:
  SLACK_ICON: https://images.crunchbase.com/image/upload/c_lpad,h_170,w_170,f_auto,b_white,q_auto:eco,dpr_1/v1455510953/wjkfamfxecnhwk3vs1ik.png
  SERVICE_NAME: "leaddriver-api"
  IMAGE_NAME: "dtfni-docker.artifactory.coxautoinc.com/drs/${SERVICE_NAME}/development"
  RELEASE_IMAGE_NAME: "dtfni-docker.artifactory.coxautoinc.com/drs/${SERVICE_NAME}/release"
  TF_DOCKER_IMAGE: "dtfni-docker.artifactory.coxautoinc.com/dt/serverless-build-image-py38:3.0.4-d4a2db6"
  REGISTRY: "http://dtfni-docker.artifactory.coxautoinc.com"
  ARTIFACTORY_AUTH: "userpass-artifactory-default"
  GIT_CREDS: "userpass-git-default"
  INFRA_REPO: "https://ghe.coxautoinc.com/DT-SFI/dr-ecs-infrastructure"
  INFRA_DIR: "dr-ecs-infrastructure"
  INFRA_VERSION: "refs/tags/v1.1.4"
  DD_DASHBOARD: "draas"
  DD_PROJECT_KEY: "dr-leaddriver-api"
  DD_PROJECT_NAME: "DR Lead Driver API"
  ARTIFACTORY_BASE: "https://artifactory.coxautoinc.com/artifactory/dtfni-docker/drs/${SERVICE_NAME}"

jobs:
  build:
    name: Lambda Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node Environment
        uses: actions/setup-node@v3

      - name: rad json
        uses: sergeysova/jq-action@v2
        id: sample
        with:
          cmd: 'jq .dev.healthCheck.url sample.json -r'

      - name: Get Short SHA
        run: |
          echo ${{ steps.sample.oututs.value }}"

